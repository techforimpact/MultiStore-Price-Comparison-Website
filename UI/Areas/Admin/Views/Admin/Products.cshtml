@model IEnumerable<Object_Layer.Product>

@{
    ViewBag.Title = "Products";
    ViewBag.CssFileName = "products.css";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

    <div class="inSidebarContainer">
        <div class="topnav">
            <a href="@Url.Action("Logout", "Admin", new { area = "Admin" })" class="material-symbols-outlined">logout</a>
            <a href="#news" class="material-symbols-outlined">notifications</a>
            <a href="#contact" class="material-symbols-outlined">account_circle expand_more</a>
            @using (Html.BeginForm("Search", "Products", FormMethod.Post, new { id = "searchForm" }))
            {
                <div class="input-group">
                    @Html.TextBox("searchInputProducts", null, new { @class = "form-control", placeholder = "Search for a product..." })
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                </div>
                <div class="dropdown" id="searchDropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" disabled>
                        Select a product...
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <!-- Dropdown items will be populated dynamically -->
                    </div>
                </div>
            }
        </div>
    </div>




    <div class="mainPage">

        <h2>
            View all products @Html.ActionLink("Add Product", "AddProduct", "Admin", new { area = "Admin" }, new { @class = "btn btn-primary" })
        </h2>



        <div class="grid-container">
            @foreach (var item in Model)
            {
                <div class="grid-item border border-dark">
                    <a href="#">
                        <div class="image-container border border-secondary">
                            @{
                                if (item.image != null) {
                                    var base64 = Convert.ToBase64String(item.image);
                                    var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);

                                

                                <img src="@Url.Content(@imgSrc)" alt="@item.name" />
                                }
                            }
                        </div>
                        <div class="product-info">
                            <h3>@item.name</h3>
                            <p>@item.Category.name</p>
                            <p>@item.price.ToString()</p>
                            <p>@item.Store.name</p>
                            <div class="buttons">

                                @Html.ActionLink("Edit", "EditProduct", new { id = item.id }, new { @class = "material-symbols-outlined link" })
                                <a href="@Url.Action("DeleteProduct", new { id = item.id })" class="material-symbols-outlined link delete-product-link" data-confirm-message="Are you sure you want to delete this product?">Delete</a>
                            </div>
                        </div>
                    </a>
                </div>

            }

        </div>
    </div>


