@model UI.Areas.User.ProductDetailModelView

@{
    ViewBag.Title = "ProductDetail";
    Layout = "~/Areas/User/Views/Shared/_Layout.cshtml";
}

<!-- Navbar Start -->
<div class="container-fluid bg-dark mb-30">
    <div class="row px-xl-5">
        <div class="col-lg-3 d-none d-lg-block">
            <a class="btn d-flex align-items-center justify-content-between bg-primary w-100" data-toggle="collapse" href="#navbar-vertical" style="height: 65px; padding: 0 30px;">
                <h6 class="text-dark m-0"><i class="fa fa-bars mr-2"></i>Categories</h6>
                <i class="fa fa-angle-down text-dark"></i>
            </a>
            <nav class="collapse position-absolute navbar navbar-vertical navbar-light align-items-start p-0 bg-light" id="navbar-vertical" style="width: calc(100% - 30px); z-index: 999;">
                <div class="navbar-nav w-100">
                    @foreach (var category in ((IEnumerable<Object_Layer.Category>)ViewBag.Categories).Where(c => c.parent_id == null))
                    {
                        <div class="nav-item link">
                            <a href="@Url.Action("CategoryPage", "User", new { categoryId = category.id })" class="nav-link">@category.name</a>
                        </div>
                    }
                </div>
            </nav>
        </div>
        <div class="col-lg-9">
            <nav class="navbar navbar-expand-lg bg-dark navbar-dark py-3 py-lg-0 px-0">
                <a href="" class="text-decoration-none d-block d-lg-none">
                    <span class="h1 text-uppercase text-primary bg-light px-2">Multi</span>
                    <span class="h1 text-uppercase text-light bg-primary px-2 ml-n1">Store</span>
                </a>
                <button type="button" class="navbar-toggler" data-toggle="collapse" data-target="#navbarCollapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse justify-content-between" id="navbarCollapse">
                    <div class="navbar-nav mr-auto py-0">
                        <a href="@Url.Action("Index")" class="nav-item nav-link">Home</a>
                        <a href="@Url.Action("Products")" class="nav-item nav-link">Products</a>
                        <a href="@Url.Action("Shops")" class="nav-item nav-link">Shops</a>
                    </div>
                    <div class="navbar-nav ml-auto py-0 d-none d-lg-block">
                        <a href="@Url.Action("Wishlist")" class="btn px-0ml-3">
                            <i class="fas fa-heart text-primary"></i>
                            <span class="badge text-secondary border border-secondary rounded-circle" style="padding-bottom: 2px;">@ViewBag.WishlistCount</span>
                        </a>
                    </div>
                </div>
            </nav>
        </div>
    </div>
</div>
<!-- Navbar End -->
<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-primary" href="@Url.Action("Index")">Home</a>
                <a class="breadcrumb-item text-primary" href="@Url.Action("Products")">Products</a>
                <span class="breadcrumb-item active">@Model.Product.name</span>
            </nav>
        </div>
    </div>
</div>


<!-- Breadcrumb End -->
<!-- Shop Detail Start -->
<div class="container-fluid pb-5">
    <div class="row px-xl-5">
        <div class="col-lg-5 mb-30 bg-white">
            <div id="product-carousel" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner bg-light">

                    @{ var base64 = Convert.ToBase64String(Model.Product.image);
                        var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);

                        <div class="carousel-item active">
                            <img class="w-100 h-100" src="@imgSrc" alt="Image">
                        </div>
                    }

                </div>
                <a class="carousel-control-prev" href="#product-carousel" data-slide="prev">
                    <i class="fa fa-2x fa-angle-left text-dark"></i>
                </a>
                <a class="carousel-control-next" href="#product-carousel" data-slide="next">
                    <i class="fa fa-2x fa-angle-right text-dark"></i>
                </a>
            </div>
        </div>

        <div class="col-lg-7 h-auto mb-30">
            <div class="h-100 bg-light p-30">
                <h3>@Model.Product.name</h3>

                <div class="container">
                    <div class="parent-container">
                        @foreach (var item in Model.Prices.Where(c => c.product_id == Model.Product.id).OrderBy(c => c.price1))
                        {
                            var basic = Convert.ToBase64String(Model.StoreImages.Where(c => c.store_id == item.store_id).First().imageurl);
                            var img = string.Format("data:image/jpg;base64,{0}", basic);
                            <div class="sub-container">
                                <img src="@img" alt="Product Image" class="product-image">
                                <div class="product-details">
                                    <div class="name">@item.Store.name</div>
                                    <div class="price">@item.price1</div>
                                </div>
                            </div>
                        }
                        <!-- Add more sub-containers as needed -->
                    </div>
                </div>




                <div class="d-flex align-items-center justify-content-between mb-2 mt-2 ml-3 pt-2">
                    @if (Model.Wishlist.Where(c => c.product_id == Model.Product.id).Count() == 0)
                    {
                        <a class="btn btn-primary px-3" href="@Url.Action("AddToWish", "User", new { id = Model.Product.id })">
                            <i class="fa fa-heart mr-1"></i> Add To
                            Wishlist
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-primary px-3" href="@Url.Action("RemoveWishlist" , "User" , new { id = Model.Product.id })">
                            <i class="fa fa-heart mr-1"></i> Remove From Wishlist
                        </a>

                    }

                </div>
            </div>
        </div>
    </div>
    <div class="row px-xl-5">
        <div class="col">
            <div class="bg-light p-30">
                <div class="nav nav-tabs mb-4">
                    <a class="nav-item nav-link active" data-toggle="tab" href="#tab-pane-1">Description</a>
                    <a class="nav-item nav-link" data-toggle="tab" href="#tab-pane-2">Comments (@Model.allcomments.Count())</a>
                </div>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="tab-pane-1">
                        <h4 class="mb-3">Product Description</h4>
                        <p>@Model.Product.description</p>
                    </div>


                    <div class="tab-pane fade show" id="tab-pane-2">
                        <div class="row">
                            <div class="col-md-6">
                                <h4 class="mb-4">@ViewBag.CommentCount review for "@Model.Product.name"</h4>

                                @foreach(var item in Model.allcomments) {

                                <div class="media mb-4">
                                    <div class="media-body">
                                        <h6>@item.review_name</h6>

                                        <p>@item.review_message</p>
                                    </div>
                                </div>
                                }

                            </div>


                            <div class="col-md-6">
                                <h4 class="mb-4">Leave a review</h4>
                                <small>Your email address will not be published. Required fields are marked *</small>


                                @using (Html.BeginForm("NewComment", "User", FormMethod.Post))
                                {
                                    @Html.HiddenFor(model => model.Product.id)
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.comment.review_message, "Your Review *")
                                        @Html.TextAreaFor(model => model.comment.review_message, new { @class = "form-control", rows = 5 })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.comment.review_name, "Your Name *")
                                        @Html.TextBoxFor(model => model.comment.review_name, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.comment.review_email, "Your Email *")
                                        @Html.TextBoxFor(model => model.comment.review_email, new { @class = "form-control", type = "email" })
                                    </div>
                                    <div class="form-group mb-0">
                                        <input type="submit" value="Leave Your Review" class="btn btn-primary px-3" />
                                    </div>
                                }


                            </div>


                        </div>
                    </div>



                </div>

            </div>
        </div>
    </div>
</div>
<!-- Shop Detail End -->
<!--Products Start-->
<div class="container-fluid pt-5 pb-3">
    <h2 class="section-title position-relative text-uppercase mx-xl-5 mb-4"><span class="bg-secondary pr-3">Recent Products</span></h2>
    <div class="row px-xl-5">
        @foreach (var item in Model.FilteredProducts)
        {

            var basic = Convert.ToBase64String(item.image);
            var img = string.Format("data:image/jpg;base64,{0}", basic);

            <div class="col-lg-3 col-md-4 col-sm-6 pb-1">
                <div class="product-item bg-light mb-4">
                    <div class="product-img position-relative overflow-hidden">
                        <img class="img-fluid w-100" src="@Url.Content(img)" alt="">
                        <div class="product-action">
                            @if (Model.Wishlist.Where(c => c.product_id == item.id).Count() == 0)
                            {
                                <a class="btn btn-outline-dark btn-square" href="@Url.Action("AddToWish" , new {id = item.id})"><i class="far fa-heart"></i></a>
                            }
                            else
                            {
                                <a class="btn btn-outline-dark btn-square" href="@Url.Action("RemoveWish" , new {id = item.id})"><i class="fas fa-heart" style="color: red"></i></a>
                            }
                            <a class="btn btn-outline-dark btn-square" href="@Url.Action("ProductDetail", new { id = item.id })"><i class="fa fa-search"></i></a>
                        </div>
                    </div>
                    <div class="text-center py-4">
                        <a class="h6 text-decoration-none text-truncate" href="">@item.name</a>
                        <div class="d-flex align-items-center justify-content-center mt-2">
                            <h5>Starting from SR @Model.Prices.Where(c => c.product_id == item.id).OrderBy(price => price.price1).First().price1</h5>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!--Products End-->
